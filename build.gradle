plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}


java {
    withSourcesJar()
    withJavadocJar()
}

group = 'com.myseotoolbox'
version = '3.1.0'
project.archivesBaseName = rootProject.name

java {
    sourceCompatibility = "17"
    targetCompatibility = "17"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '3.0.7'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.1.0.RELEASE'
    implementation 'com.google.cloud:spring-cloud-gcp-pubsub:6.0.1'
    implementation 'com.google.cloud:spring-cloud-gcp-starter-pubsub:6.0.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4.2'
    implementation 'com.google.guava:guava:27.1-jre'
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

artifacts {
    archives jar, javadocJar, sourcesJar
}

signing {

    def signingKey = findProperty("signingKey")
    if (signingKey != null) {
        //In CI we have the key stored in ORG_GRADLE_PROJECT_signingKey instead of accessing file specified in
        // local gradle.properties
        def signingPassword = findProperty("signingKeyPassword")
        useInMemoryPgpKeys(signingKey, signingPassword)
    }
    sign publishing.publications
}


tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'GCP Commons - by My SEO Toolbox'
                description = 'A library to abstract GCP Common libraries'
                url = 'https://github.com/salvatorenovelli/gcp-commons'

                developers {
                    developer {
                        id = 'snovelli'
                        name = 'Salvatore'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com:salvatorenovelli/gcp-commons.git'
                    developerConnection = 'scm:git:git:github.com:salvatorenovelli/gcp-commons.git'
                    url = 'https://github.com/salvatorenovelli/gcp-commons'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            //url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"

            credentials {
                username = findProperty("ossrhUsername")
                password = findProperty("ossrhPassword")
            }
        }
    }
}